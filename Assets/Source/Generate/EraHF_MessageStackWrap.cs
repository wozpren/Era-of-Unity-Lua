//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EraHF_MessageStackWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EraHF.MessageStack), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddMessage", AddMessage);
		L.RegFunction("AddTopMessage", AddTopMessage);
		L.RegFunction("TitleMessage", TitleMessage);
		L.RegFunction("ClearStack", ClearStack);
		L.RegFunction("StartPop", StartPop);
		L.RegFunction("PushMessage", PushMessage);
		L.RegFunction("PushAllMessage", PushAllMessage);
		L.RegFunction("Continue", Continue);
		L.RegFunction("OnPointerDown", OnPointerDown);
		L.RegFunction("DelButton", DelButton);
		L.RegFunction("OnPointerEnter", OnPointerEnter);
		L.RegFunction("OnPointerExit", OnPointerExit);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("text", get_text, set_text);
		L.RegVar("Wait", get_Wait, set_Wait);
		L.RegVar("Enter", get_Enter, set_Enter);
		L.RegVar("CanPop", get_CanPop, set_CanPop);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.AddMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddTopMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.AddTopMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TitleMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.TitleMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearStack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			obj.ClearStack();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartPop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			obj.StartPop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PushMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			obj.PushMessage();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PushAllMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			obj.PushAllMessage();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Continue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			obj.Continue();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnPointerDown(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DelButton(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			obj.DelButton();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnPointerEnter(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EraHF.MessageStack obj = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnPointerExit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)o;
			System.Text.StringBuilder ret = obj.text;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Wait(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)o;
			bool ret = obj.Wait;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Wait on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Enter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)o;
			bool ret = obj.Enter;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Enter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CanPop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)o;
			bool ret = obj.CanPop;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CanPop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)o;
			System.Text.StringBuilder arg0 = (System.Text.StringBuilder)ToLua.CheckObject(L, 2, typeof(System.Text.StringBuilder));
			obj.text = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Wait(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Wait = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Wait on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Enter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Enter = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Enter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CanPop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.MessageStack obj = (EraHF.MessageStack)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.CanPop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CanPop on a nil value");
		}
	}
}

