//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EraHF_GameManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EraHF.GameManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("ClickHandle", ClickHandle);
		L.RegFunction("IsMatch", IsMatch);
		L.RegFunction("StartInput", StartInput);
		L.RegFunction("StopInput", StopInput);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, set_Instance);
		L.RegVar("luaDir", get_luaDir, set_luaDir);
		L.RegVar("Title", get_Title, set_Title);
		L.RegVar("TrainPage", get_TrainPage, set_TrainPage);
		L.RegVar("GeneralPage", get_GeneralPage, set_GeneralPage);
		L.RegVar("MessageStack", get_MessageStack, set_MessageStack);
		L.RegVar("FullPage", get_FullPage, set_FullPage);
		L.RegVar("Input", get_Input, set_Input);
		L.RegVar("DebugTool", get_DebugTool, set_DebugTool);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClickHandle(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				EraHF.GameManager obj = (EraHF.GameManager)ToLua.CheckObject<EraHF.GameManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.ClickHandle(arg0);
				return 0;
			}
			else if (count == 3)
			{
				EraHF.GameManager obj = (EraHF.GameManager)ToLua.CheckObject<EraHF.GameManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				obj.ClickHandle(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EraHF.GameManager.ClickHandle");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsMatch(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			EraHF.GameManager obj = (EraHF.GameManager)ToLua.CheckObject<EraHF.GameManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			bool o = obj.IsMatch(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartInput(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)ToLua.CheckObject<EraHF.GameManager>(L, 1);
			obj.StartInput();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopInput(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)ToLua.CheckObject<EraHF.GameManager>(L, 1);
			obj.StopInput();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, EraHF.GameManager.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_luaDir(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EraHF.GameManager.luaDir);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Title(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			Title ret = obj.Title;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Title on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TrainPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			TrainPage ret = obj.TrainPage;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TrainPage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GeneralPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			GeneralPage ret = obj.GeneralPage;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GeneralPage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MessageStack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			EraHF.MessageStack ret = obj.MessageStack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MessageStack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FullPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			TMPro.TextMeshProUGUI ret = obj.FullPage;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FullPage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Input(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			EraHF.InputView ret = obj.Input;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Input on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DebugTool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			UnityEngine.GameObject ret = obj.DebugTool;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DebugTool on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Instance(IntPtr L)
	{
		try
		{
			EraHF.GameManager arg0 = (EraHF.GameManager)ToLua.CheckObject<EraHF.GameManager>(L, 2);
			EraHF.GameManager.Instance = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_luaDir(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EraHF.GameManager.luaDir = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Title(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			Title arg0 = (Title)ToLua.CheckObject<Title>(L, 2);
			obj.Title = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Title on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TrainPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			TrainPage arg0 = (TrainPage)ToLua.CheckObject<TrainPage>(L, 2);
			obj.TrainPage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TrainPage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GeneralPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			GeneralPage arg0 = (GeneralPage)ToLua.CheckObject<GeneralPage>(L, 2);
			obj.GeneralPage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GeneralPage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MessageStack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			EraHF.MessageStack arg0 = (EraHF.MessageStack)ToLua.CheckObject<EraHF.MessageStack>(L, 2);
			obj.MessageStack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MessageStack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FullPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			TMPro.TextMeshProUGUI arg0 = (TMPro.TextMeshProUGUI)ToLua.CheckObject<TMPro.TextMeshProUGUI>(L, 2);
			obj.FullPage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FullPage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Input(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			EraHF.InputView arg0 = (EraHF.InputView)ToLua.CheckObject<EraHF.InputView>(L, 2);
			obj.Input = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Input on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DebugTool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EraHF.GameManager obj = (EraHF.GameManager)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.DebugTool = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DebugTool on a nil value");
		}
	}
}

